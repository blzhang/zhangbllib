比特币Block Chain技术如何开辟数字民主 http://www.antminers.com/btc/201406/412.html
End-to-end auditable voting systems https://en.wikipedia.org/wiki/End-to-end_auditable_voting_systems
知乎问答 https://www.zhihu.com/question/23994473
小川行长谈数字货币（非区块链） http://economy.caixin.com/2016-02-13/100908683.html


去中心化
信任原则—————不需要相互信任，我可以违约
责任原则————没有一方需要从事非法或高度管制活动
易用原则————
可扩展原则————不损害系统原则，也不引用中心化参与者的前提下扩展至任何量级的处理能力
资产和交易多样性原则————可以从事多种金融衍生品
聚集原则————一个单一买单可以匹配多个卖单
原子性原则————
中介原则————交易无需以来中介代理（这可能需要智能合约）
整体定价原则————不接受来自于非本体系的价格
零和原则————必须既不创造也不毁灭价值，任何一方的盈利必须建立在另一方的损失上，任何一方都不会对系统有负债（参见AoT）
整体吸引力原则————应该提供足够吸引力的收益，而超越与之相关的风险
隐私原则————至少提供和bitcoin相同的隐私级别
赫尔墨斯原则————尽可能快的处理存款、交易、提款。系统内部应当最快的进行确认
安全原则————至少提供和bitcoin一样的安全级别
开源原则————必须开源，软硬件开源
被动订单执行原则————可以再没有用户或他的电脑的时候自动的执行。


政府的担心：
    洗钱
    监管
    法律手段控制数字货币，包括包邮扣押和没收用于犯罪的数字货币？？？
    尤其针对洗钱、恐怖主义等犯罪行为要保留必要的遏制手段
数字货币的好处：
    


local ethereum contract address:0xbc40334433dC27A27e9683FFb8436F324649f4c1

0x3B1a80D6481e106ed90Da8B5Ab93d70447e4B5Be
￼
addmultisigaddress <nrequired> <'["key","key"]'> [account]
addnode <node> <add|remove|onetry>
backupwallet <destination>
createmultisig <nrequired> <'["key","key"]'>
createrawtransaction [{"txid":txid,"vout":n},...] {address:amount,...}
decoderawtransaction <hex string>
dumpprivkey <bitcoinaddress>
encryptwallet <passphrase>
getaccount <bitcoinaddress>
getaccountaddress <account>
getaddednodeinfo <dns> [node]
getaddressesbyaccount <account>
getbalance [account] [minconf=1]
getblock <hash>
getblockcount
getblockhash <index>
getblocktemplate [params]
getconnectioncount
getdifficulty
getgenerate
gethashespersec
getinfo
getmininginfo
getnewaddress [account]
getpeerinfo
getrawmempool
getrawtransaction <txid> [verbose=0]
getreceivedbyaccount <account> [minconf=1]
getreceivedbyaddress <bitcoinaddress> [minconf=1]
gettransaction <txid>
gettxout <txid> <n> [includemempool=true]
gettxoutsetinfo
getwork [data]
help [command]
importprivkey <bitcoinprivkey> [label] [rescan=true]
keypoolrefill
listaccounts [minconf=1]
listaddressgroupings
listlockunspent
listreceivedbyaccount [minconf=1] [includeempty=false]
listreceivedbyaddress [minconf=1] [includeempty=false]
listsinceblock [blockhash] [target-confirmations]
listtransactions [account] [count=10] [from=0]
listunspent [minconf=1] [maxconf=9999999] ["address",...]
lockunspent unlock? [array-of-Objects]
move <fromaccount> <toaccount> <amount> [minconf=1] [comment]
sendfrom <fromaccount> <tobitcoinaddress> <amount> [minconf=1] [comment] [comment-to]
sendmany <fromaccount> {address:amount,...} [minconf=1] [comment]
sendrawtransaction <hex string>
sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]
setaccount <bitcoinaddress> <account>
setgenerate <generate> [genproclimit]
settxfee <amount>
signmessage <bitcoinaddress> <message>
signrawtransaction <hex string> [{"txid":txid,"vout":n,"scriptPubKey":hex,"redeemScript":hex},...] [<privatekey1>,...] [sighashtype="ALL"]
stop
submitblock <hex data> [optional-params-obj]
validateaddress <bitcoinaddress>
verifymessage <bitcoinaddress> <signature> <message>




https://github.com/hyperledger/fabric/blob/master/docs/index.md





身份体系



{"transactions":
    [
    {   
        "type":1,
        "chaincodeID":"EgRteWNj",
        "payload":"CiIIARIGEgRteWNjGhYKBGluaXQSAWESAzEwMBIBYhIDMjAw",
        "uuid":"mycc",
        "timestamp":{"seconds":1471942453,"nanos":616054002}
    ],
        "stateHash":"LHK/jDPIpHT/qgabalz5xgqEktm7+xPgbYw8E/jnwNuFPuoiGhh8TPTULjdHI99WvaPSCKdaSRzz/+2LzY4Rfw==",
        "previousBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg==",
        "nonHashData":{"localLedgerCommitTimestamp":{"seconds":1471942454,"nanos":666743120}
    }
}


{"transactions":
    [{
        "type":1,
        "chaincodeID":"EgRteWNj",
        "payload":"CiIIARIGEgRteWNjGhYKBGluaXQSAWESAzEwMBIBYhIDMjAw",
        "uuid":"mycc",
        "timestamp":{"seconds":1471942549,"nanos":36129442}
        }
    ],
        "stateHash":"LHK/jDPIpHT/qgabalz5xgqEktm7+xPgbYw8E/jnwNuFPuoiGhh8TPTULjdHI99WvaPSCKdaSRzz/+2LzY4Rfw==",
        "previousBlockHash":"E4mo9AovycNJFVBuYNz6j888u9xZZE0cIj+7F4D19+FHVzZO3KiLp3lPsCYTKQeIUrCUNgARuwcak6fB6TyV7g==",
        "nonHashData":{"localLedgerCommitTimestamp":{"seconds":1471942550,"nanos":36962882}
    }
}


{"stateHash":"v+JGeqpdSDmKxvIXnzCYV/UQlHl+24Ti5z93N4S0st75zsW3zXEKPsuW6rezG3BmQJ+l5eKRIOPuiaZYhBQOmA==",
    "previousBlockHash":"9nobaweSg2/aOzkY8cg68087lLW87I2kbCkpF/TbSTq2IufqtZx5gpQ3bdTF0leoT6DZcVYz5cuei8mIFX7E4Q==",
    "nonHashData":{"localLedgerCommitTimestamp":{"seconds":1472523806,"nanos":709535371}}}


curl -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{\



curl -d '{
  "jsonrpc": "2.0",
  "method": "deploy",
  "params": {
    "type": 1 ,
    "chaincodeID":{
        "path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"
    },
    "ctorMsg": {
        "function":"init",
        "args":["a", "1000", "b", "2000"]
    }
  },
  "id": "1"  
}' 'http://localhost:7050/chaincode'



curl -d '{
  "jsonrpc": "2.0",
  "method": "query",
  "params": {
      "type": 1,
      "chaincodeID":{
          "name":"d497b8cad7f728bc5c9391d6479d9614ccaf7410693bd39e06e61455fe8f2b6128b08f4f5312a3a0531349042679d98b7483be6f3285f29e8037e156b2781f65"
      },
      "ctorMsg": {
         "function":"query",
         "args":["a"]
      }
  },
  "id": 5
}' 'http://localhost:7050/chaincode'



curl -d '{
  "jsonrpc": "2.0",
  "method": "invoke",
  "params": {
      "type": 1,
      "chaincodeID":{
          "name":"5decb5380a4a6a723dd5af5e1c055871d6628ade26e3a083313aa432026155a9a9d3853fa3b505fd4c66ab19345ef64bf887830d1544a71caa7d607d078aac56"
      },
      "ctorMsg": {
         "function":"invoke",
         "args":["a", "b", "100"]
      }
  },
  "id": 3
}' 'http://localhost:7050/chaincode'






1、 git clone https://github.com/hyperledger/fabric


http://localhost:7050/chain
http://localhost:7050/chain/blocks/0


//////////////////////////////////
// example5:
//////////////////////////////////


curl -d '{
  "jsonrpc": "2.0",
  "method": "deploy",
  "params": {
    "type": 1 ,
    "chaincodeID":{
        "path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example04",
        "name":"d497b8cad7f728bc5c9391d6479d9614ccaf7410693bd39e06e61455fe8f2b6128b08f4f5312a3a0531349042679d98b7483be6f3285f29e8037e156b2781f65"
    },
    "ctorMsg": {
        "function":"init",
        "args":["event", "1"]
    }
  },
  "id": "10"  
}' 'http://localhost:7050/chaincode'

curl -d '{
  "jsonrpc": "2.0",
  "method": "query",
  "params": {
      "type": 1,
      "chaincodeID":{
          "name":"d497b8cad7f728bc5c9391d6479d9614ccaf7410693bd39e06e61455fe8f2b6128b08f4f5312a3a0531349042679d98b7483be6f3285f29e8037e156b2781f65"
      },
      "ctorMsg": {
         "function":"query",
         "args":["a"]
      }
  },
  "id": 5
}' 'http://localhost:7050/chaincode'



curl -d '{
  "jsonrpc": "2.0",
  "method": "invoke",
  "params": {
      "type": 1,
      "chaincodeID":{
          "name":"37be3d8a4c919e0bdae2a7b1ca395cc9ca6107b159779015465a54abffb99fb039fa634fe52f9e91c7f8f408855737325d1429cb2d36db236dfbbd59529b1364"
      },
      "ctorMsg": {
         "function":"invoke",
         "args":["event", "1"]
      }
  },
  "id": 3
}' 'http://localhost:7050/chaincode'









curl -d '{
  "enrollId": "jim",
  "enrollSecret": "6avZQLwcUe9b"
}' 'http://localhost:7050/registrar'

第一步，创建账号：


curl -d '{
  "jsonrpc": "2.0",
  "method": "deploy",
  "params": {
    "type": 1 ,
    "chaincodeID":{
        "path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"
    },
    "ctorMsg": {
        "function":"init",
        "args":["a", "1000", "b", "0"]
    },
    "secureContext": "jim"
  },
  "id": "1"  
}' 'http://localhost:7050/chaincode'

返回chainCode ID：（message域中内容）
{"jsonrpc":"2.0","result":{"status":"OK","message":"fbe49a7a9ed4fd8643ac6d08537c3833e29b2178664e7bec13c7d95125d44d4581e8bc51044e4222df045d91270996407c947d45435b5ab72063597757e93fb3"},"id":"1"}

第二步，创建合约
curl -d '{
  "jsonrpc": "2.0",
  "method": "deploy",
  "params": {
    "type": 1 ,
    "chaincodeID":{
        "path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example04",
        "name":"0121585c3e04e71dacefc8024e18a339ba6959242f4a333f04cc98dc4303dc63fc1a1519629f19847fd02b4fedb640e13b9402a8af52d724f37e6fb4156f3075"
    },
    "ctorMsg": {
        "function":"init",
        "args":["event", "1"]
    },
    "secureContext": "jim"
  },
  "id": "10"  
}' 'http://localhost:7050/chaincode'

第三步，通过合约转账
curl -d '{
  "jsonrpc": "2.0",
  "method": "invoke",
  "params": {
      "type": 1,
      "chaincodeID":{
          "name":"32b7efad57881af7abfa05441a7942428b57a3c2767959b0aebb8e5bb081f923720be3225ebf1309937137da84473a5696b65f6aab1513e068da2e6b17c4f50a"
      },
      "ctorMsg": {
         "function":"invoke",
         "args":["event", "1", "0121585c3e04e71dacefc8024e18a339ba6959242f4a333f04cc98dc4303dc63fc1a1519629f19847fd02b4fedb640e13b9402a8af52d724f37e6fb4156f3075"]
      },
    "secureContext": "jim"
  },
  "id": 3
}' 'http://localhost:7050/chaincode'


第四步，查账：
curl -d '{
  "jsonrpc": "2.0",
  "method": "query",
  "params": {
      "type": 1,
      "chaincodeID":{
          "name":"0121585c3e04e71dacefc8024e18a339ba6959242f4a333f04cc98dc4303dc63fc1a1519629f19847fd02b4fedb640e13b9402a8af52d724f37e6fb4156f3075"
      },
      "ctorMsg": {
         "function":"query",
         "args":["a"]
      },
    "secureContext": "jim"
  },
  "id": 5
}' 'http://localhost:7050/chaincode'


=================================================================================
=

curl -d '{
  "jsonrpc": "2.0",
  "method": "deploy",
  "params": {
    "type": 1 ,
    "chaincodeID":{
        "path":"github.com/hyperledger/fabric/cebbank/chaincode/zhangbl"
    },
    "ctorMsg": {
        "function":"init",
        "args":["a", "3000", "b", "2000"]
    }
  }
}' 'http://localhost:7050/chaincode'


curl -d '{
  "jsonrpc": "2.0",
  "method": "deploy",
  "params": {
    "type": 1 ,
    "chaincodeID":{
        "path":"github.com/hyperledger/fabric/cebbank/chaincode/smartContract"
    },
    "ctorMsg": {
        "function":"init",
        "args":["event", "1"]
    }
  }
}' 'http://localhost:7050/chaincode'

curl -d '{
  "jsonrpc": "2.0",
  "method": "invoke",
  "params": {
      "type": 1,
      "chaincodeID":{
          "name":"b98276a02d91054b5301e671106a3f6abe0b1d60c6a143978ce79861f92e1bbaf142257db35c27178284a1ae1fa1b07b3e016f203eafec3b3cc3c8bb67b91c0b"
      },
      "ctorMsg": {
         "function":"invoke",
         "args":["event", "middleSchool", "20cc2c43a8788a6258229c50c17dba0456516cef2e0d439144c91eb47ffc510019da5b8c88e9ee8cc9409d696900d8e5a7adadb276430d82ea786fd0eb1ceb54", "a", "b"]
      }
  }
}' 'http://localhost:7050/chaincode'

curl -d '{
  "jsonrpc": "2.0",
  "method": "invoke",
  "params": {
    "type": 1 ,
    "chaincodeID":{
        "path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02",
        "name":"20cc2c43a8788a6258229c50c17dba0456516cef2e0d439144c91eb47ffc510019da5b8c88e9ee8cc9409d696900d8e5a7adadb276430d82ea786fd0eb1ceb54"
    },
    "ctorMsg": {
        "function":"createAccNO",
        "args":["e", "4500"]
    }
  }
}' 'http://localhost:7050/chaincode'

curl -d '{
  "jsonrpc": "2.0",
  "method": "invoke",
  "params": {
    "type": 1 ,
    "chaincodeID":{
        "path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02",
        "name":"4fddf6f5a73648342bd3b96e656cdef8e0aa49425f01a094f898ecfb706604373ad56d63648512a03a05cdf70c351c743f10a0b9ace6356c0ee50eae1bc41609"
    },
    "ctorMsg": {
        "function":"transferAcc",
        "args":["a", "e", "4000"]
    }
  }
}' 'http://localhost:7050/chaincode'

curl -d '{
  "jsonrpc": "2.0",
  "method": "invoke",
  "params": {
    "type": 1 ,
    "chaincodeID":{
        "path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02",
        "name":"f543e2a1b7c3d8223b9479c273567e464c775141606610a2deb2cf8b29dee486020190c68ac9da497e62525b532f35baef9ece028605cd0f65331cd9a9fbc52f"
    },
    "ctorMsg": {
        "function":"ECashPrinter",
        "args":["a", "4000"]
    }
  }
}' 'http://localhost:7050/chaincode'


curl -d '{
  "jsonrpc": "2.0",
  "method": "query",
  "params": {
      "type": 1,
      "chaincodeID":{
          "name":"20cc2c43a8788a6258229c50c17dba0456516cef2e0d439144c91eb47ffc510019da5b8c88e9ee8cc9409d696900d8e5a7adadb276430d82ea786fd0eb1ceb54"
      },
      "ctorMsg": {
         "function":"query",
         "args":["b"]
      }
  }
}' 'http://localhost:7050/chaincode'






curl -d '{
  "jsonrpc": "2.0",
  "method": "deploy",
  "params": {
      "type": 1,
      "chaincodeID":{
          "path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05"
      },
      "ctorMsg": {
         "function":"Init",
         "args":["sum", "123"]
      }
  }
}' 'http://localhost:7050/chaincode'


curl -d '{
  "jsonrpc": "2.0",
  "method": "invoke",
  "params": {
      "type": 1,
      "chaincodeID":{
          "path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05",
          "name":"fbfe3e79168a77f6bb44711bf785f5997abfbb6ed495d11b1245d1dacbda033199ffd4f47842430b37c0ef4a1e0ef02e1273a0ef3e2a9240b6be9363fd5567af"
      },
      "ctorMsg": {
         "function":"invoke",
         "args":["36ea4ab8b369192c7648c183f9e77034754f19b728b9646ffcbc8f419468b0f02235049acd6bf72c557e0d3ebd50074103790f53e2911c4c51d4ba2c85b55754", "sum"]
      }
  }
}' 'http://localhost:7050/chaincode'


curl -d '{
  "jsonrpc": "2.0",
  "method": "query",
  "params": {
      "type": 1,
      "chaincodeID":{
          "name":"b375e978f61882c4de3cdce60a69d329567852f4c00c9c360b9fdede5cc7ed185b0320fd55d47ec43cdfc13b50a73ad3f247ec96fa39298b028c310df4645faa"
      },
      "ctorMsg": {
         "function":"query",
         "args":["c"]
      }
  }
}' 'http://localhost:7050/chaincode'


在交易过程中查看账本状态：http://localhost:7050/chain
查看某个区块信息：http://localhost:7050/chain/blocks/40




docker run --name=vp1 \
                    --restart=unless-stopped \
                    -it \
                    -p 7050:7050 \
                    -p 7051:7051 \
                    -v /var/run/docker.sock:/var/run/docker.sock \
                    -e CORE_PEER_ID=vp1 \
                    -e CORE_PEER_ADDRESSAUTODETECT=true \
                    -e CORE_NOOPS_BLOCK_WAIT=10 \
                    hyperledger/fabric-peer:latest peer node start


$ peer chaincode deploy -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 -c '{"Function":"init", "Args": ["a","100", "b", "200"]}'
03:08:44.740 [chaincodeCmd] chaincodeDeploy -> INFO 001 Deploy result: type:GOLANG chaincodeID:<path:"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02" name:"ee5b24a1f17c356dd5f6e37307922e39ddba12e5d2e203ed93401d7d05eb0dd194fb9070549c5dc31eb63f4e654dbd5a1d86cbb30c48e3ab1812590cd0f78539" > ctorMsg:<args:"init" args:"a" args:"100" args:"b" args:"200" >
Deploy chaincode: ee5b24a1f17c356dd5f6e37307922e39ddba12e5d2e203ed93401d7d05eb0dd194fb9070549c5dc31eb63f4e654dbd5a1d86cbb30c48e3ab1812590cd0f78539
03:08:44.740 [main] main -> INFO 002 Exiting.....



进入docker内部！
docker exec -it bddtests_vp0_1 bash

bitzhang@hotmail.com

